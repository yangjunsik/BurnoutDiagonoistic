import { BurnoutResult } from './burnoutScoring';

function getMemeItem(totalScore: number): { category: string; item: string; message: string; emoji: string } {
  let category: string;
  let items: Array<{ item: string; message: string; emoji: string }>;
  
  if (totalScore <= 24) {
    // Í±¥Í∞ïÌïú ÏÉÅÌÉú - Ïó¨Ïú†Î°úÏö¥ ÏïÑÏù¥ÌÖúÎì§
    category = "healthy";
    items = [
      { item: "ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏", message: "Ïó¨Ïú†Î°úÏö¥ ÌïòÎ£®Î•º ÏúÑÌï¥", emoji: "‚òï" },
      { item: "Ïö¥Îèô", message: "Í±¥Í∞ïÌïú Î™∏Í≥º ÎßàÏùå", emoji: "üèÉ‚Äç‚ôÇÔ∏è" },
      { item: "ÎèÖÏÑú", message: "ÏßÄÏãùÏùÑ ÏåìÎäî ÏãúÍ∞Ñ", emoji: "üìö" },
      { item: "ÏπúÍµ¨Îì§Í≥º ÎßåÎÇ®", message: "ÏÜåÏ§ëÌïú Ïù∏Ïó∞Îì§", emoji: "üë•" },
      { item: "Ï∑®ÎØ∏ÏÉùÌôú", message: "ÎÇòÎßåÏùò ÌäπÎ≥ÑÌïú ÏãúÍ∞Ñ", emoji: "üé®" }
    ];
  } else if (totalScore <= 48) {
    // Í∞ÄÎ≤ºÏö¥ Î≤àÏïÑÏõÉ - Ïä§Ìä∏Î†àÏä§ Ìï¥ÏÜå ÏïÑÏù¥ÌÖúÎì§
    category = "mild";
    items = [
      { item: "ÏπòÌÇ®", message: "Ïä§Ìä∏Î†àÏä§Ïóî Ïó≠Ïãú ÏπòÌÇ®", emoji: "üçó" },
      { item: "Îß•Ï£º", message: "ÌïòÎ£®Ïùò ÎÅùÏùÄ Îß•Ï£ºÏôÄ Ìï®Íªò", emoji: "üç∫" },
      { item: "ÎÑ∑ÌîåÎ¶≠Ïä§", message: "ÌòÑÏã§ÎèÑÌîºÏùò ÏôÑÎ≤ΩÌïú ÏàòÎã®", emoji: "üì∫" },
      { item: "Ïû†", message: "ÏÑ∏ÏÉÅÏóêÏÑú Í∞ÄÏû• Ï¢ãÏùÄ ÎèÑÌîºÏ≤ò", emoji: "üò¥" },
      { item: "ÏáºÌïë", message: "ÎèàÏùÄ ÏóÜÏßÄÎßå Í∏∞Î∂ÑÏ†ÑÌôò", emoji: "üõí" }
    ];
  } else {
    // Ïã¨Ìïú Î≤àÏïÑÏõÉ - Í∑πÎã®Ï†ÅÏù∏ Ìï¥Í≤∞Ï±ÖÎì§
    category = "severe";
    items = [
      { item: "ÏÜåÏ£º", message: "ÌòÑÏã§ÏùÑ ÏûäÍ≤å Ìï¥Ï£ºÎäî ÏπúÍµ¨", emoji: "üç∂" },
      { item: "Îã¥Î∞∞", message: "Ïä§Ìä∏Î†àÏä§ Ìï¥ÏÜåÏùò ÎßàÏßÄÎßâ ÏàòÎã®", emoji: "üö¨" },
      { item: "Îèà", message: "Î™®Îì† Î¨∏Ï†úÏùò Ìï¥Í≤∞Ï±Ö", emoji: "üí∞" },
      { item: "Ìú¥Í∞Ä", message: "Ïù¥ Î™®Îì† Í±∏ Îñ†ÎÇòÍ≥† Ïã∂Ïñ¥", emoji: "‚úàÔ∏è" },
      { item: "ÏÇ¨Ìëú", message: "Îçî Ïù¥ÏÉÅÏùÄ Î™ª Ï∞∏Í≤†Ïñ¥", emoji: "üìù" }
    ];
  }
  
  // ÎûúÎç§ÏúºÎ°ú ÌïòÎÇò ÏÑ†ÌÉù
  const randomItem = items[Math.floor(Math.random() * items.length)];
  
  return {
    category,
    ...randomItem
  };
}

function wrapText(ctx: CanvasRenderingContext2D, text: string, maxWidth: number): string[] {
  const words = text.split(' ');
  const lines = [];
  let currentLine = words[0];

  for (let i = 1; i < words.length; i++) {
    const word = words[i];
    const width = ctx.measureText(currentLine + " " + word).width;
    if (width < maxWidth) {
      currentLine += " " + word;
    } else {
      lines.push(currentLine);
      currentLine = word;
    }
  }
  lines.push(currentLine);
  
  return lines;
}

function roundRect(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number) {
  ctx.beginPath();
  ctx.moveTo(x + radius, y);
  ctx.lineTo(x + width - radius, y);
  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
  ctx.lineTo(x + width, y + height - radius);
  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
  ctx.lineTo(x + radius, y + height);
  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
  ctx.lineTo(x, y + radius);
  ctx.quadraticCurveTo(x, y, x + radius, y);
  ctx.closePath();
}

function drawItemIcon(ctx: CanvasRenderingContext2D, x: number, y: number, emoji: string) {
  // ÌÅ∞ Ïù¥Î™®ÏßÄ ÏïÑÏù¥ÏΩò Í∑∏Î¶¨Í∏∞
  ctx.font = '120px Arial, sans-serif';
  ctx.textAlign = 'center';
  ctx.textBaseline = 'middle';
  ctx.fillText(emoji, x, y);
}

export function generateMemeImage(results: BurnoutResult, personalizedComment: string): Promise<string> {
  return new Promise((resolve) => {
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d')!;
    
    // Î∞à Ïù¥ÎØ∏ÏßÄ ÌÅ¨Í∏∞ (Ï†ïÏÇ¨Í∞ÅÌòï SNS ÏµúÏ†ÅÌôî)
    canvas.width = 600;
    canvas.height = 600;

    // Í≤ÄÏùÄ Î∞∞Í≤Ω
    ctx.fillStyle = '#000000';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    // ÌïÑÏöîÌïú ÏïÑÏù¥ÌÖú ÌëúÏãú
    const memeItem = getMemeItem(results.totalScore);
    
    // ÏïÑÏù¥ÌÖú ÏïÑÏù¥ÏΩò Í∑∏Î¶¨Í∏∞
    drawItemIcon(ctx, canvas.width / 2, 180, memeItem.emoji);

    // ÏÉÅÎã® Ï†úÎ™©
    ctx.fillStyle = '#ffffff';
    ctx.font = 'bold 32px monospace';
    ctx.textAlign = 'center';
    ctx.fillText('ÎÇ¥Í≤å ÌïÑÏöîÌïúÍ±¥?', canvas.width / 2, 80);

    // Ìà¨Î∞ïÌïú ÎßêÌíçÏÑ† Î∞∞Í≤Ω
    ctx.fillStyle = '#ffffff';
    ctx.strokeStyle = '#ffffff';
    ctx.lineWidth = 4;
    
    // Î∂àÍ∑úÏπôÌïú ÎßêÌíçÏÑ†
    ctx.beginPath();
    ctx.moveTo(80, 320);
    ctx.lineTo(520, 320);
    ctx.lineTo(530, 330);
    ctx.lineTo(520, 450);
    ctx.lineTo(80, 445);
    ctx.lineTo(75, 325);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();

    // ÎßêÌíçÏÑ† Íº¨Î¶¨ (Ìà¨Î∞ïÌïòÍ≤å)
    ctx.beginPath();
    ctx.moveTo(canvas.width / 2 - 15, 320);
    ctx.lineTo(canvas.width / 2, 270);
    ctx.lineTo(canvas.width / 2 + 20, 320);
    ctx.closePath();
    ctx.fillStyle = '#ffffff';
    ctx.fill();
    ctx.stroke();

    // Î©îÏù∏ Î©îÏãúÏßÄ (ÏïÑÏù¥ÌÖúÎ™Ö)
    ctx.fillStyle = '#000000';
    ctx.font = 'bold 36px monospace';
    ctx.textAlign = 'center';
    ctx.fillText(memeItem.item, canvas.width / 2, 370);

    // Ï†êÏàò ÌëúÏãú
    ctx.font = 'bold 18px monospace';
    ctx.fillText(`${results.totalScore}Ï†ê`, canvas.width / 2, 400);

    // ÌïòÎã® ÏΩîÎ©òÌä∏ (ÏïÑÏù¥ÌÖú ÏÑ§Î™Ö)
    ctx.fillStyle = '#ffffff';
    ctx.font = '18px monospace';
    const commentLines = wrapText(ctx, memeItem.message, canvas.width - 100);
    commentLines.forEach((line, index) => {
      ctx.fillText(line, canvas.width / 2, 490 + (index * 25));
    });

    // Ìà¨Î∞ïÌïú Ïû•Ïãù Ï†êÎì§
    ctx.fillStyle = '#ffffff';
    for (let i = 0; i < 15; i++) {
      const x = Math.random() * canvas.width;
      const y = Math.random() * canvas.height;
      const size = Math.random() * 3 + 2;
      ctx.beginPath();
      ctx.arc(x, y, size, 0, 2 * Math.PI);
      ctx.fill();
    }

    // Ïù¥ÎØ∏ÏßÄÎ•º Base64Î°ú Î≥ÄÌôò
    canvas.toBlob((blob) => {
      if (blob) {
        const url = URL.createObjectURL(blob);
        resolve(url);
      } else {
        resolve('');
      }
    }, 'image/png');
  });
}

export function downloadMemeImage(imageUrl: string, filename: string = 'burnout-meme.png') {
  const link = document.createElement('a');
  link.href = imageUrl;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}